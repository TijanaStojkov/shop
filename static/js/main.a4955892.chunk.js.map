{"version":3,"sources":["components/Navbar/Navbar.js","components/UI/Spinner/Spinner.js","components/UI/Button/Button.js","components/hoc/Currency/Currency.js","components/Shop/Products/Product/Product.js","components/Shop/Products/Products.js","components/UI/Modal/Modal.js","components/hoc/Auxilary/Auxilary.js","components/hoc/withErrorHandler/withErrorHandler.js","components/Shop/OrderSummary/OrderSummary.js","components/UI/Filter/Filter.js","components/Shop/Shop.js","store/actions/productsActions.js","store/actions/actionTypes.js","store/actions/filterActions.js","store/actions/orderActions.js","components/Shop/Checkout/CheckoutSummary.js","components/UI/Forms/Input/Input.js","components/Shop/Checkout/ContactData/ContactData.js","components/Shop/Checkout/Checkout.js","components/Shop/Orders/Order/Order.js","components/Shop/Orders/Orders.js","components/Layout/Layout.js","App.js","serviceWorker.js","store/reducers/orderReducer.js","store/utility.js","store/reducers/shopReducer.js","index.js","assets/images/products/shert.jpg","assets/images/products/pants.jpg","assets/images/products/skirt.jpg"],"names":["nav","className","alignLinks","brand","href","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","to","exact","spinner","button","props","node","small","style","marginRight","waves","ClassName","onClick","clicked","disabled","textOrIcon","text","num","Number","toFixed","product","sizes","productSizes","map","size","index","length","actionButtons","order","key","Button","addProduct","productName","removeProduct","m","l","actions","closeIcon","revealIcon","header","image","productImages","horizontal","productQuantity","util","productPrices","Products","products","this","Object","keys","productKey","Product","filterProductsList","Component","connect","state","shopReducer","ModalComponent","nextProps","nextState","orderable","children","flat","modal","orderHandler","bottomSheet","fixedFooter","id","dismissible","endingTop","opacity","startingTop","trigger","updateModalComponentHandler","aux","withErrorHandler","WrappedComponent","axios","error","reqInterceptor","interceptors","request","use","req","setState","resInterceptor","response","res","message","eject","orderSummary","productsList","textTransform","totalPrice","filter","s","label","multiple","onChange","event","filterSize","target","value","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","coverTrigger","hover","PRODUCTS_IMAGES","shert","pants","skirt","PRODUCTS_PRICES","PRODUCTS_SIZES","Shop","updatePurchasable","reduce","first","next","initPurchase","history","push","initProducts","productsComponent","ordeSummary","filterProducts","OrderSummary","errorMessage","Modal","dispatch","type","actionCreators","get","then","resp","data","catch","CheckoutSummary","onCheckoutCancle","onCheckoutContinue","input","inputElement","inputClasses","invalid","shouldValidate","tuched","elementType","elementConfig","change","option","deliveryValue","CheckoutData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","e","preventDefault","formData","formElementIdentifier","price","orderData","purchaseProducts","inputChangedHandler","inputIdentefier","updatedOrderForm","updatedFormElement","checkValidity","console","log","inputIndentifiers","rules","isValid","trim","$","document","ready","window","formSelect","formElementArray","config","form","onSubmit","formElement","loading","post","orderId","PurchaseProductsSuccess","PurchaseProductsFail","Checkout","goBack","replace","summary","purchasedRedirect","purchased","path","match","component","ContactData","orderReducer","productsArray","amounth","expanded","onSelect","Orders","fetchOrders","orders","accordion","popout","Order","store","loadingOrders","fetchOrdersSuccess","fetchOrdersFail","layout","App","basename","Layout","Boolean","location","hostname","initState","action","newOrder","concat","updateObject","oldObject","updatedObject","initalState","listProducts","newProductsObject","selected","forEach","element","indexOf","toUpperCase","newProductsAdd","newProductCountAdd","filterProductsListAdd","filteredProductsListAdd","newProductsRemove","newProductCountRemove","filterProductsListRemove","filteredProductsListRemove","filterProductsListSize","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","createStore","applyMiddleware","result","getState","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a4955892.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Icon } from 'react-materialize';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.scss'\r\n\r\nconst nav = () => {\r\n    return (\r\n        <Navbar\r\n        className=\"red lighten-3\"\r\n            alignLinks=\"left\"\r\n            brand={<a className=\"brand-logo right \" href=\"google.com\">Logo</a>}\r\n            menuIcon={<Icon>menu</Icon>}\r\n            options={{\r\n                draggable: true,\r\n                edge: 'left',\r\n                inDuration: 250,\r\n                onCloseEnd: null,\r\n                onCloseStart: null,\r\n                onOpenEnd: null,\r\n                onOpenStart: null,\r\n                outDuration: 200,\r\n                preventScrolling: true\r\n            }}\r\n            >\r\n                <NavLink to='/' exact>Shop</NavLink>\r\n                <NavLink to='/Orders'>Orders</NavLink>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default nav;","import React from 'react';\r\nimport './Spinner.scss'\r\n\r\nconst spinner = () => (\r\n    <div className=\"loader\">Loading...</div>\r\n)\r\nexport default spinner;","import React from 'react';\r\nimport { Icon, Button } from 'react-materialize';\r\n\r\n\r\nconst button = (props) => (                        \r\n    <Button \r\n        node=\"button\" \r\n        small \r\n        style={{ marginRight: '5px' }}  \r\n        waves=\"light\" \r\n        className={props.ClassName}\r\n        onClick={props.clicked} \r\n        disabled={props.disabled}\r\n        > <Icon>{props.textOrIcon}</Icon>{props.text} </Button>\r\n)\r\n\r\nexport default button;","export default {\r\n    formatCurrency: function(num){\r\n        return Number(num.toFixed(2))+\"$\"\r\n    }\r\n}","import React from 'react';\r\nimport { Col, Card, CardTitle, Icon} from 'react-materialize';\r\nimport ButtonUI from '../../../UI/Button/Button';\r\nimport util from '../../../hoc/Currency/Currency'\r\n\r\nconst product = (props) => {\r\n    const sizes = props.productSizes.map((size,index) =>\r\n        (index+1===props.productSizes.length)?size : size +', '\r\n    )\r\n    const actionButtons = !props.order?[\r\n        <span key='1'>\r\n            <ButtonUI\r\n                ClassName = 'teal lighten-3'\r\n                clicked = {() => props.addProduct(props.productName)}\r\n                textOrIcon = 'add'\r\n            ></ButtonUI>\r\n        </span>,\r\n        <span key='2'>\r\n            <ButtonUI\r\n                ClassName = 'red lighten-3'\r\n                clicked = {() => props.removeProduct(props.productName)}\r\n                textOrIcon = 'remove'\r\n            ></ButtonUI>\r\n        </span>\r\n]:null\r\n    return (\r\n            <Col\r\n                m={12}\r\n                l={6}\r\n            >\r\n                <Card\r\n                className=\"Card\"\r\n                actions={actionButtons}\r\n                closeIcon={<Icon>close</Icon>}\r\n                revealIcon={<Icon>more_vert</Icon>}\r\n                header={<CardTitle image={props.productImages} />}\r\n                horizontal\r\n                >\r\n                <h3>{props.productName}</h3>\r\n                <h3>{props.order}</h3>\r\n                <p>Quantity: {props.productQuantity}</p>\r\n                <p>Price: {util.formatCurrency(props.productPrices)}</p>\r\n                <p>Sizes: {sizes}</p>\r\n                </Card>\r\n            </Col>\r\n            \r\n    )\r\n}\r\nexport default product;","import React, {Component} from 'react';\r\nimport Product from './Product/Product';\r\nimport { Row } from 'react-materialize';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Products extends Component {\r\n    render() {\r\n        let products = this.props.order?\r\n                Object.keys(this.props.products).map(productKey =>{\r\n                    return (\r\n                        this.props.products[productKey]>0?\r\n                            <Product \r\n                                order={this.props.order}\r\n                                key={productKey} \r\n                                productName={productKey} \r\n                                productQuantity={this.props.products[productKey]} \r\n                                productImages={this.props.productImages[productKey]}\r\n                                productPrices={this.props.productPrices[productKey]}\r\n                                productSizes={this.props.productSizes[productKey]}\r\n                                />\r\n                            :null\r\n                    )\r\n                }):\r\n                Object.keys(this.props.filterProductsList).map(productKey => {\r\n                    return (\r\n                        <Product \r\n                        key={productKey} \r\n                        productName={productKey} \r\n                        productQuantity={this.props.filterProductsList[productKey]} \r\n                        productImages={this.props.productImages[productKey]}\r\n                        productPrices={this.props.productPrices[productKey]}\r\n                        productSizes={this.props.productSizes[productKey]}\r\n                        removeProduct={this.props.removeProduct}\r\n                        addProduct={this.props.addProduct}/>\r\n                    )})\r\n        return (\r\n            <Row>\r\n                {products}\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return{\r\n        filterProductsList: state.shopReducer.filterProductsList,\r\n        products: state.shopReducer.products\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Products);","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-materialize';\r\n\r\nclass ModalComponent extends Component {\r\n    shouldComponentUpdate (nextProps, nextState) {\r\n        //console.log(this.props.orderable, nextProps.orderable);\r\n        //console.log(this.props.children, nextProps.children)\r\n        return (this.props.orderable !== nextProps.orderable || this.props.children !== nextProps.children)\r\n    }\r\n    componentDidUpdate (){\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n        <Modal\r\n            actions={[\r\n                <span key='1'><Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button></span>,\r\n                <span key='2'><Button flat modal=\"close\" node=\"button\" waves=\"green\" onClick={this.props.orderHandler}>Order</Button></span>\r\n            ]}\r\n            bottomSheet={false}\r\n            fixedFooter={false}\r\n            header=\"Order summary\"\r\n            id=\"modal-0\"\r\n            options={{\r\n                dismissible: true,\r\n                endingTop: '10%',\r\n                inDuration: 250,\r\n                onCloseEnd: null,\r\n                onCloseStart: null,\r\n                onOpenEnd: null,\r\n                onOpenStart: null,\r\n                opacity: 0.5,\r\n                outDuration: 250,\r\n                preventScrolling: true,\r\n                startingTop: '4%'\r\n            }}\r\n            trigger={<Button node=\"button\" disabled={!this.props.orderable} onClick={this.props.updateModalComponentHandler}>Order summary</Button>}\r\n            >\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalComponent;","const aux = (props) => props.children \r\nexport default aux;","import React, {Component} from 'react';\r\nimport Aux from '../Auxilary/Auxilary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        constructor (props) {\r\n            super(props)\r\n            this.state = {\r\n                error: null\r\n            }\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({\r\n                    error: null\r\n                })\r\n                return req\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({\r\n                    error: error.message\r\n                })\r\n            })\r\n        }\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n       \r\n        render () {\r\n            return (\r\n                <Aux>\r\n                   <p>{this.state.error}</p>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>    \r\n            )\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport util from '../../hoc/Currency/Currency'\r\n\r\nclass orderSummary extends Component {\r\n    render(){\r\n        const productsList = this.props.products?Object.keys(this.props.products).map(productKey => {\r\n            return <li key={productKey}><span style={{textTransform: 'capitalize'}}>{productKey}</span>: {this.props.products[productKey]}</li>\r\n        }): \"\"\r\n        return(\r\n            <Aux>\r\n            <ul>\r\n                {productsList}\r\n            </ul>\r\n            <p>Total price: {util.formatCurrency(this.props.totalPrice)}</p>\r\n        </Aux>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default orderSummary;","import React from 'react';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport { Select, Row, Col } from 'react-materialize';\r\nimport './Filter.css'\r\n\r\nconst filter = (props) => (\r\n    <Aux>\r\n        <Row>\r\n            <Col s={6}>\r\n                <Select\r\n                label='Filter by size'\r\n                id=\"Select-9\"\r\n                multiple={false}\r\n                onChange={(event) => props.filterSize(event.target.value)}\r\n                options={{\r\n                    classes: '',\r\n                    dropdownOptions: {\r\n                    alignment: 'left',\r\n                    autoTrigger: true,\r\n                    closeOnClick: true,\r\n                    constrainWidth: true,\r\n                    coverTrigger: true,\r\n                    hover: false,\r\n                    inDuration: 150,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    outDuration: 250\r\n                    }\r\n                }}\r\n                value=\"\"\r\n                >\r\n                <option disabled value=\"\" > {props.size} </option>\r\n                <option value=\"s\"> S </option>\r\n                <option value=\"m\"> M </option>\r\n                <option value=\"x\"> X </option>\r\n                <option value=\"xl\"> XL </option>\r\n                <option value=\"xxl\"> XXL </option>\r\n            </Select>\r\n            </Col>\r\n            <Col s={6}>\r\n            </Col>\r\n        </Row>\r\n        \r\n    </Aux>\r\n)\r\n    \r\nexport default filter;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n//images\r\nimport shert from '../../assets/images/products/shert.jpg';\r\nimport pants from '../../assets/images/products/pants.jpg';\r\nimport skirt from '../../assets/images/products/skirt.jpg';\r\n//components\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport Products from './Products//Products';\r\nimport Modal from '../UI/Modal/Modal';\r\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\r\nimport OrderSummary from './OrderSummary/OrderSummary';\r\nimport Filter from '../UI/Filter/Filter';\r\n//redux\r\nimport { connect } from 'react-redux';\r\n//actions\r\nimport * as actionCreators from '../../store/actions/allActions'\r\n\r\nconst PRODUCTS_IMAGES = {\r\n    shert: shert,\r\n    pants: pants,\r\n    skirt: skirt,\r\n}\r\nconst PRODUCTS_PRICES = {\r\n    shert: 10,\r\n    pants: 4.3,\r\n    skirt: 5.4,\r\n}\r\nconst PRODUCTS_SIZES = {\r\n    shert: [\"X\", \"L\", \"XL\", \"XXL\"],\r\n    pants: [\"X\", \"M\", \"XL\"],\r\n    skirt: [\"S\", \"X\", \"XXL\"],\r\n}\r\n\r\nclass Shop extends Component {\r\n    \r\n    state = {\r\n        orderable: false,\r\n        order:true\r\n    }\r\n    updatePurchasable = (products) => {\r\n        if(products){\r\n            const sum = Object.keys(products)\r\n            .map(productKey =>{\r\n                return products[productKey]\r\n            })\r\n            .reduce((first, next) => {\r\n                return first + next\r\n            },0)\r\n            return  sum>0;\r\n        }  \r\n    }\r\n    componentDidMount () {\r\n        this.props.initProducts()\r\n    }\r\n    orderHandler = () => {\r\n        this.props.initPurchase();\r\n        this.props.history.push('/checkout')\r\n       }\r\n    addProduct = (productName) => {\r\n        this.props.addProduct(productName);\r\n    }\r\n    removeProduct = (productName) => {\r\n        this.props.removeProduct(productName);\r\n    }\r\n    render () {\r\n        const productsComponent = this.props.products?  <Products \r\n        productImages={PRODUCTS_IMAGES}\r\n        productPrices={PRODUCTS_PRICES}\r\n        productSizes={PRODUCTS_SIZES}\r\n        removeProduct={this.removeProduct}\r\n        addProduct={this.addProduct}/>:<Spinner/>\r\n        \r\n        let ordeSummary = null;\r\n        let filterProducts = null;\r\n        if (this.props.products){\r\n            ordeSummary = \r\n            <OrderSummary \r\n                products={this.props.products}\r\n                totalPrice={this.props.totalPrice}\r\n            />\r\n            filterProducts =\r\n            <Filter\r\n                size={this.props.size}\r\n                filterSize={this.props.filterSize}\r\n            />\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Our shop</h1>\r\n                {filterProducts}\r\n                {productsComponent}\r\n                <p>{this.props.errorMessage}</p>\r\n                <Modal \r\n                    products={this.props.products}\r\n                    totalPrice={this.props.totalPrice}\r\n                    orderable={this.updatePurchasable(this.props.products)}\r\n                    orderHandler={this.orderHandler}\r\n                >\r\n                    {ordeSummary}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.shopReducer.products,\r\n        filterProductsList: state.shopReducer.filterProductsList,\r\n        size: state.shopReducer.size,\r\n        totalPrice: state.shopReducer.totalPrice,\r\n        errorMessage: state.shopReducer.errorMessage,\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProduct: (productName) => dispatch(actionCreators.addProduct(productName)),\r\n        removeProduct: (productName) => dispatch(actionCreators.removeProduct(productName)),\r\n        filterSize: (size) => dispatch(actionCreators.filterSize(size)),\r\n        initProducts: () => dispatch(actionCreators.initProducts()),\r\n        initPurchase: () => dispatch(actionCreators.initPurchase()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Shop,axios));","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addProduct = (productName) => {\r\n    return {\r\n        type: actionTypes.ADD_PRODUCT, \r\n        productName: productName\r\n    }\r\n}\r\nexport const removeProduct = (productName) => {\r\n    return {\r\n        type: actionTypes.REMOVE_PRODUCT, \r\n        productName: productName\r\n    }\r\n}\r\nexport const setProducts = (products) => {\r\n    return {\r\n        type: actionTypes.SET_PRODUCTS,\r\n        products: products\r\n    }\r\n}\r\nexport const fetchProductsFaild = () => {\r\n    return {\r\n        type: actionTypes.FETCH_PRODUCTS_FAILD,\r\n    }\r\n}\r\nexport const initProducts = () => {\r\n    return dispatch => {\r\n        axios.get('https://e-commerce-5e72e.firebaseio.com/products.json')\r\n        .then(resp =>{\r\n            dispatch (setProducts(resp.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch (fetchProductsFaild())\r\n        })\r\n    }\r\n}\r\n","export const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\r\nexport const FILTER_SIZE = 'FILTER_SIZE';\r\nexport const SET_PRODUCTS = 'SET_PRODUCTS';\r\nexport const FETCH_PRODUCTS_FAILD = 'FETCH_PRODUCTS_FAILD';\r\n\r\nexport const PURCHASE_PRODUCTS_START = 'PURCHASE_PRODUCTS_START';\r\nexport const PURCHASE_PRODUCTS_SUCCESS = 'PURCHASE_PRODUCTS_SUCCESS';\r\nexport const PURCHASE_PRODUCTS_FAIL = 'PURCHASE_PRODUCTS_FAIL';\r\nexport const INIT_PURCHASE = 'INIT_PURCHASE';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL= 'FETCH_ORDERS_FAIL';\r\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const filterSize = (size) => {\r\n    return {\r\n        type: actionTypes.FILTER_SIZE, \r\n        size: size\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const purchaseProductsStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_PRODUCTS_START\r\n    }\r\n}\r\nexport const PurchaseProductsSuccess = (orderId, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_PRODUCTS_SUCCESS,\r\n        orderId: orderId,\r\n        orderData: orderData\r\n    }\r\n}\r\nexport const PurchaseProductsFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_PRODUCTS_FAIL,\r\n        error: error\r\n    }\r\n}\r\nexport const purchaseProducts = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseProductsStart());\r\n        axios.post('https://e-commerce-5e72e.firebaseio.com/order.json', orderData)\r\n        .then(response => {\r\n            dispatch(PurchaseProductsSuccess(response.data.name, orderData))\r\n        })\r\n        .catch(error => {\r\n            dispatch(PurchaseProductsFail(error))\r\n        })\r\n    }\r\n}\r\nexport const initPurchase = () => {\r\n    return {\r\n        type: actionTypes.INIT_PURCHASE\r\n    }\r\n}\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    }\r\n}\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        axios.get('https://e-commerce-5e72e.firebaseio.com/order.json')\r\n            .then ( response => {\r\n                const orders = []\r\n                for (let key in response.data){\r\n                    console.log(response.data[key],key,response.data)\r\n                    orders.push ({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch (fetchOrdersSuccess(orders))\r\n            })\r\n            .catch( error => {\r\n                dispatch (fetchOrdersFail(error))\r\n            })\r\n    }\r\n}\r\n        ","import React from 'react';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport Products from '../Products/Products';\r\nimport ButtonUI from '../../UI/Button/Button';\r\n\r\nconst CheckoutSummary = (props) => {\r\n        return(\r\n            <Aux>\r\n                <Products \r\n                    order={props.order}\r\n                    filterProductsList={props.products}\r\n                    productImages={props.productImages}\r\n                    productPrices={props.productPrices}\r\n                    productSizes={props.productSizes}/>\r\n                    <ButtonUI ClassName = 'red lighten-3' clicked={props.onCheckoutCancle} text='Cancle' textOrIcon=''></ButtonUI>\r\n                    <ButtonUI ClassName = 'green lighten-3' clicked={props.onCheckoutContinue} text = 'Continue' textOrIcon=''/>\r\n            </Aux>\r\n        )\r\n}\r\nexport default CheckoutSummary;","import React from 'react';\r\nimport './Input.scss'\r\nconst input = (props) =>{\r\n    let inputElement = null;\r\n    const inputClasses = []\r\n    if (props.invalid && props.shouldValidate && props.tuched) {\r\n        inputClasses.push('Invalid')\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ('input'):\r\n            inputElement = <input className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.change}/>\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.change}/>\r\n            break;\r\n        case ('select'):   \r\n            inputElement = \r\n            <select value={props.value} onChange={props.change}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option key={option.value} value={option.value} >{option.deliveryValue}</option>\r\n                ))}\r\n            </select>\r\n            break;\r\n        default:\r\n            inputElement = <input {...props.elementConfig} value={props.value} onChange={props.change}/>\r\n    }\r\n    return (\r\n        <div>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\nexport default input;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './ContactData.css';\r\nimport $ from 'jquery';\r\n\r\n//components\r\nimport ButtonUI from '../../../UI/Button/Button';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport InputComponent from '../../../UI/Forms/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\n\r\n//react-materialize\r\nimport { Row, Col } from 'react-materialize';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../../../store/actions/allActions';\r\n\r\nclass CheckoutData extends Component{\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder:'Your name',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                tuched: false\r\n            },\r\n                \r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder:'Your street',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                tuched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder:'Your zipCode',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                },\r\n                valid: false,\r\n                tuched: false\r\n            },\r\n                country: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder:'Your country',\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    tuched: false\r\n                },  \r\n                email: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'email',\r\n                        placeholder:'Your email',\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    tuched: false\r\n                },  \r\n                deliveryMethod: {\r\n                    elementType: 'select',\r\n                    elementConfig: {\r\n                        options: [\r\n                            {value:'fastest', deliveryValue: 'Fastest'},\r\n                            {value:'cheapest', deliveryValue: 'Cheapest'}\r\n                        ]\r\n                    },\r\n                    validation: {},\r\n                    value: 'fastest',\r\n                    valid: true\r\n                },  \r\n        },\r\n        formIsValid: false,\r\n    }\r\n    checkValidity (value,rules){\r\n        let isValid = true\r\n        if (rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if (rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if (rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        return isValid\r\n    }\r\n    orderHandler = (e) => {\r\n        e.preventDefault()\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\r\n        }\r\n        const products = {\r\n            products: this.props.products,\r\n            price: this.props.totalPrice,\r\n            orderData: formData,\r\n        }\r\n        this.props.purchaseProducts(products)\r\n    }\r\n    inputChangedHandler = (event, inputIdentefier) => {\r\n        const updatedOrderForm = {...this.state.orderForm};\r\n        const updatedFormElement = {...updatedOrderForm[inputIdentefier]};\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity (updatedFormElement.value,updatedFormElement.validation)\r\n        \r\n        updatedFormElement.tuched = true;\r\n        updatedOrderForm[inputIdentefier] = updatedFormElement;\r\n        console.log(updatedOrderForm)\r\n        let formIsValid = true;\r\n        for (let inputIndentifiers in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIndentifiers].valid && formIsValid;\r\n            console.log(formIsValid)\r\n        }\r\n        console.log(formIsValid)\r\n        this.setState({\r\n            orderForm: updatedOrderForm,\r\n            formIsValid: formIsValid\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        $(document).ready(function() {\r\n            window.$('select').formSelect();\r\n          });\r\n    }\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id:key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler} className='text-placeholder'>\r\n               \r\n               {formElementArray.map(formElement => (\r\n                    <InputComponent \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType} \r\n                        elementConfig={formElement.config.elementConfig} \r\n                        value={formElement.config.value}\r\n                        change={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        tuched={formElement.config.tuched} />\r\n               ))}\r\n                <ButtonUI  \r\n                        ClassName = 'green lighten-2'\r\n                        text = 'Order'\r\n                        textOrIcon = ''\r\n                        disabled={!this.state.formIsValid}\r\n                    />\r\n            </form>\r\n            );\r\n        if (this.props.loading) {\r\n               form = <Spinner/>\r\n        }\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <Col s={3}/>\r\n                    <Col s={6}>\r\n                    <h4 className='center '>Enter your contact data</h4>\r\n                    {form}\r\n                    </Col>\r\n                    <Col s={3}/>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.shopReducer.products,\r\n        totalPrice: state.shopReducer.totalPrice,\r\n        loading: state.shopReducer.loading,\r\n    }\r\n}\r\nconst mapDispachToProps = dispatch =>{\r\n    return {\r\n        purchaseProducts: (orderData) => dispatch(actionCreators.purchaseProducts(orderData))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispachToProps)(withErrorHandler(CheckoutData,axios));","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n//components\r\nimport CheckoutSummary from './CheckoutSummary';\r\nimport ContactData from '../Checkout/ContactData/ContactData'\r\n\r\n//images\r\nimport shert from '../../../assets/images/products/shert.jpg';\r\nimport pants from '../../../assets/images/products/pants.jpg';\r\nimport skirt from '../../../assets/images/products/skirt.jpg';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\n\r\nconst PRODUCTS_IMAGES = {\r\n    shert: shert,\r\n    pants: pants,\r\n    skirt: skirt,\r\n}\r\nconst PRODUCTS_PRICES = {\r\n    shert: 10,\r\n    pants: 4.3,\r\n    skirt: 5.4,\r\n}\r\nconst PRODUCTS_SIZES = {\r\n    shert: [\"X\", \"L\", \"XL\", \"XXL\"],\r\n    pants: [\"X\", \"M\", \"XL\"],\r\n    skirt: [\"S\", \"X\", \"XXL\"],\r\n}\r\n\r\nclass Checkout extends Component{\r\n    \r\n    state = {\r\n        orderable: false,\r\n        errorMessage: \"\",\r\n        order:true\r\n    }\r\n    onCheckoutCancle = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    onCheckoutContinue = () => {\r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n    render(){\r\n        let summary = <Redirect to='/'/>\r\n\r\n        if(this.props.products){\r\n            const purchasedRedirect =  this.props.purchased? <Redirect to='/'/>:null;\r\n            summary =  <div>\r\n                            {purchasedRedirect}\r\n                            <CheckoutSummary\r\n                                order={this.state.order}\r\n                                products={this.props.products}\r\n                                productImages={PRODUCTS_IMAGES}\r\n                                productPrices={PRODUCTS_PRICES}\r\n                                productSizes={PRODUCTS_SIZES}\r\n                                onCheckoutCancle={this.onCheckoutCancle}\r\n                                onCheckoutContinue={this.onCheckoutContinue}\r\n                            />\r\n                             <Route \r\n                                path={this.props.match.path + '/contact-data'} \r\n                                component={ContactData} />\r\n                        </div>\r\n        }\r\n        return(\r\n            <Aux>\r\n               {summary}\r\n            </Aux>\r\n        )\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.shopReducer.products,\r\n        purchased: state.orderReducer.purchased\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport { CollapsibleItem } from 'react-materialize';\r\nimport util from '../../../hoc/Currency/Currency'\r\n\r\nconst order = (props) => {\r\n    /*let products = props.products? Object.keys(props.products).map( productsKey => \r\n        <li key={productsKey}>{productsKey.charAt(0).toUpperCase() + productsKey.slice(1)}: {props.products[productsKey]}</li>\r\n    ):null*/\r\n    let productsArray = [];\r\n    for (let productName in props.products){\r\n        productsArray.push({\r\n            name: productName,\r\n            amounth: props.products[productName]\r\n        })\r\n    }\r\n    const products = productsArray.map(product => \r\n        <li key={product.name}><span style={{textTransform: 'capitalize'}}>{product.name}</span>: {product.amounth}</li>)\r\n    return (\r\n        <CollapsibleItem\r\n            expanded={false}\r\n            header={props.name}\r\n            node=\"div\"\r\n            onSelect={()=>{}}\r\n        >\r\n            <ul>\r\n                {products}\r\n                <li><b>Total price: {util.formatCurrency(4.3)}</b></li>\r\n                <li></li>\r\n            </ul>\r\n        </CollapsibleItem>\r\n    )\r\n}\r\nexport default order","import React, { Component } from 'react';\r\nimport { Collapsible } from 'react-materialize';\r\nimport axios from 'axios';\r\n\r\n//components\r\nimport Order from './Order/Order';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../../store/actions/allActions';\r\nclass Orders extends Component {\r\n   \r\n    componentDidMount () {\r\n        this.props.fetchOrders()\r\n    }\r\n    render() {\r\n        let orders = this.props.orders?\r\n        <Collapsible accordion popout >\r\n        {this.props.orders.map(order => {\r\n            return (\r\n                <Order \r\n                    key={order.id}\r\n                    name={order.orderData.name} \r\n                    deliveryMethod={order.orderData.deliveryMethod}\r\n                    products={order.products}\r\n                    />\r\n            )\r\n        })}\r\n        </Collapsible>: null\r\n           \r\n        if(this.props.loading){\r\n            orders = <Spinner/>\r\n        }\r\n        return (\r\n            <Aux>\r\n                <h3>Orders</h3>\r\n                {orders}\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = store => {\r\n    return {\r\n        orders: store.orderReducer.orders,\r\n        loading: store.orderReducer.loadingOrders\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchOrders: () => dispatch(actionCreators.fetchOrders())\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n//components\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Shop from '../Shop/Shop';\r\nimport Checkout from '../Shop/Checkout/Checkout';\r\nimport Orders from '../Shop/Orders/Orders'\r\n\r\nconst layout = () => {\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n      <Switch>\r\n        <Route exact path={'/'} component={Shop}/>\r\n        <Route path={'/checkout'} component={Checkout}/>\r\n        <Route path={'/orders'} component={Orders}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default layout;","import React from 'react';\r\nimport './App.scss';\r\nimport 'materialize-css'; // It installs the JS asset only\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport Layout from './components/Layout/Layout';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"/shop\">\r\n      <Layout/>\r\n    </BrowserRouter>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false,\r\n    loadingOrders: false\r\n}\r\n\r\nconst orderReducer = (state=initState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_PRODUCTS_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                order: state.orders.concat(newOrder),\r\n                purchased: true\r\n            }\r\n        case actionTypes.PURCHASE_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case actionTypes.PURCHASE_PRODUCTS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.INIT_PURCHASE:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loadingOrders: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n                loadingOrders: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error.message,\r\n                loadingOrders: false\r\n            }\r\n        default:\r\n            return state\r\n}\r\n}\r\n\r\nexport default orderReducer;","export const updateObject = (oldObject, updatedObject) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedObject\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility'\r\n\r\nconst initalState = {\r\n    totalPrice: 0,\r\n    products: null,\r\n    filterProductsList: {\r\n        pants:0,\r\n        shert:0,\r\n        skirt:0\r\n    },\r\n    size: '',\r\n    errorMessage: '',\r\n    loading: false\r\n}\r\nconst PRODUCTS_SIZES = {\r\n    shert: [\"X\", \"L\", \"XL\", \"XXL\"],\r\n    pants: [\"X\", \"M\", \"XL\"],\r\n    skirt: [\"S\", \"X\", \"XXL\"],\r\n}\r\nconst PRODUCTS_PRICES = {\r\n    shert: 10,\r\n    pants: 4.3,\r\n    skirt: 5.4,\r\n}\r\nconst listProducts = (state, newProductsObject, size) => {\r\n    if(state.size!=='' || size!==''){\r\n        const selected = size!==''?size: state.size;\r\n        var filterProductsList = {...newProductsObject};\r\n        Object.keys(PRODUCTS_SIZES).forEach(element => {\r\n            if(PRODUCTS_SIZES[element].indexOf(selected.toUpperCase())<0){\r\n                delete filterProductsList[element]\r\n            }\r\n        });\r\n        return filterProductsList\r\n    }\r\n}\r\nconst shopReducer = (state = initalState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.ADD_PRODUCT:\r\n            const newProductsAdd = {...state.products};\r\n            const newProductCountAdd = newProductsAdd[action.productName] + 1;\r\n            newProductsAdd[action.productName] = newProductCountAdd;\r\n            \r\n            const filterProductsListAdd = listProducts(state, newProductsAdd, '')\r\n            const filteredProductsListAdd = filterProductsListAdd?filterProductsListAdd:newProductsAdd\r\n            console.log('state-add', state)\r\n            return updateObject(state,{\r\n                products: newProductsAdd,\r\n                filterProductsList: filteredProductsListAdd,\r\n                totalPrice: state.totalPrice + PRODUCTS_PRICES[action.productName],\r\n            })\r\n\r\n        case actionTypes.REMOVE_PRODUCT:\r\n            const newProductsRemove = {...state.products};\r\n            const newProductCountRemove = newProductsRemove[action.productName] - 1;\r\n            newProductsRemove[action.productName] = newProductCountRemove;\r\n\r\n            const filterProductsListRemove = listProducts(state, newProductsRemove, '')\r\n            const filteredProductsListRemove = filterProductsListRemove?filterProductsListRemove:newProductsRemove\r\n            console.log('state-remove', state)\r\n            return updateObject(state,{\r\n                products: newProductsRemove,\r\n                filterProductsList: filteredProductsListRemove ,\r\n                totalPrice: state.totalPrice - PRODUCTS_PRICES[action.productName]\r\n            })\r\n            \r\n        case actionTypes.FILTER_SIZE:\r\n            const filterProductsListSize = listProducts(state, state.products, action.size)\r\n            return updateObject(state, {size: action.size, filterProductsList: filterProductsListSize})\r\n\r\n        case actionTypes.SET_PRODUCTS:\r\n            console.log(action.products)\r\n            return updateObject(state, {products: action.products, filterProductsList: action.products, errorMessage: '', totalPrice: 0})\r\n\r\n        case actionTypes.FETCH_PRODUCTS_FAILD:\r\n            return updateObject(state, {errorMessage: 'Fetching products faild!'})\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default shopReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//redux\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/orderReducer';\nimport shopReducer from './store/reducers/shopReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispaching', action) \n            const result = next(action);\n            console.log('[Middleware] next state', store.getState()) \n            return result\n        }\n    }\n}\nconst rootReducer = combineReducers ({\n    orderReducer: orderReducer,\n    shopReducer: shopReducer\n})\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(logger, thunk)))\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/shert.eda47ffe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pants.99ddaf19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skirt.64895794.jpg\";"],"sourceRoot":""}