{"version":3,"sources":["components/Navbar/Navbar.js","components/UI/Spinner/Spinner.js","components/UI/Button/Button.js","components/hoc/Currency/Currency.js","components/Shop/Products/Product/Product.js","components/Shop/Products/Products.js","components/UI/Modal/Modal.js","components/hoc/Auxilary/Auxilary.js","components/hoc/withErrorHandler/withErrorHandler.js","components/Shop/OrderSummary/OrderSummary.js","components/UI/Filter/Filter.js","components/Shop/Shop.js","components/Shop/Checkout/CheckoutSummary.js","components/UI/Forms/Input/Input.js","components/Shop/Checkout/ContactData/ContactData.js","components/Shop/Checkout/Checkout.js","components/Shop/Orders/Order/Order.js","components/Shop/Orders/Orders.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js","assets/images/products/shert.jpg","assets/images/products/pants.jpg","assets/images/products/skirt.jpg"],"names":["nav","className","alignLinks","brand","href","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","to","exact","spinner","button","props","node","small","style","marginRight","waves","ClassName","onClick","clicked","disabled","textOrIcon","text","num","Number","toFixed","product","sizes","productSizes","map","size","index","length","actionButtons","order","key","Button","addProduct","productName","removeProduct","m","l","actions","closeIcon","revealIcon","header","image","productImages","horizontal","productQuantity","util","productPrices","products","Object","keys","productKey","Product","ModalComponent","nextProps","nextState","this","orderable","children","console","log","flat","modal","orderHandler","bottomSheet","fixedFooter","id","dismissible","endingTop","opacity","startingTop","trigger","updateModalComponentHandler","Component","aux","withErrorHandler","WrappedComponent","axios","hideModal","setState","error","state","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","message","eject","orderSummary","productsList","textTransform","totalPrice","filter","s","label","multiple","onChange","filterSize","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","coverTrigger","hover","value","PRODUCTS_IMAGES","shert","pants","skirt","PRODUCTS_PRICES","PRODUCTS_SIZES","filterProductsList","errorMessage","oldProductCount","newProductCount","newTotalPrice","listProducts","updatePurchasable","sum","reduce","first","next","queryParams","i","push","queryString","join","history","pathname","search","e","target","selected","forEach","element","indexOf","toUpperCase","get","then","resp","data","catch","productsComponent","Products","ordeSummary","filterProducts","OrderSummary","Modal","CheckoutSummary","onCheckoutCancle","onCheckoutContinue","input","inputElement","inputClasses","invalid","shouldValidate","tuched","elementType","elementConfig","change","option","deliveryValue","CheckoutData","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","loading","preventDefault","formData","formElementIdentifier","price","orderData","post","responce","inputChangedHandler","event","inputIdentefier","updatedOrderForm","updatedFormElement","checkValidity","inputIndentifiers","rules","isValid","trim","$","document","ready","window","formSelect","formElementArray","config","form","onSubmit","formElement","Checkout","goBack","replace","query","URLSearchParams","location","entries","param","path","match","render","productsArray","amounth","expanded","onSelect","orders","accordion","popout","Order","customer","layout","component","Shop","Orders","App","basename","Layout","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.60852e1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Icon } from 'react-materialize';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.scss'\r\n\r\nconst nav = () => {\r\n    return (\r\n        <Navbar\r\n        className=\"red lighten-3\"\r\n            alignLinks=\"left\"\r\n            brand={<a className=\"brand-logo right \" href=\"google.com\">Logo</a>}\r\n            menuIcon={<Icon>menu</Icon>}\r\n            options={{\r\n                draggable: true,\r\n                edge: 'left',\r\n                inDuration: 250,\r\n                onCloseEnd: null,\r\n                onCloseStart: null,\r\n                onOpenEnd: null,\r\n                onOpenStart: null,\r\n                outDuration: 200,\r\n                preventScrolling: true\r\n            }}\r\n            >\r\n                <NavLink to='/' exact>Shop</NavLink>\r\n                <NavLink to='/Orders'>Orders</NavLink>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default nav;","import React from 'react';\r\nimport './Spinner.scss'\r\n\r\nconst spinner = () => (\r\n    <div className=\"loader\">Loading...</div>\r\n)\r\nexport default spinner;","import React from 'react';\r\nimport { Icon, Button } from 'react-materialize';\r\n\r\n\r\nconst button = (props) => (                        \r\n    <Button \r\n        node=\"button\" \r\n        small \r\n        style={{ marginRight: '5px' }}  \r\n        waves=\"light\" \r\n        className={props.ClassName}\r\n        onClick={props.clicked} \r\n        disabled={props.disabled}\r\n        > <Icon>{props.textOrIcon}</Icon>{props.text} </Button>\r\n)\r\n\r\nexport default button;","export default {\r\n    formatCurrency: function(num){\r\n        return Number(num.toFixed(2))+\"$\"\r\n    }\r\n}","import React from 'react';\r\nimport { Col, Card, CardTitle, Icon} from 'react-materialize';\r\nimport ButtonUI from '../../../UI/Button/Button';\r\nimport util from '../../../hoc/Currency/Currency'\r\n\r\nconst product = (props) => {\r\n    const sizes = props.productSizes.map((size,index) =>\r\n        (index+1===props.productSizes.length)?size : size +', '\r\n    )\r\n    const actionButtons = !props.order?[\r\n        <span key='1'>\r\n            <ButtonUI\r\n                ClassName = 'teal lighten-3'\r\n                clicked = {() => props.addProduct(props.productName)}\r\n                textOrIcon = 'add'\r\n            ></ButtonUI>\r\n        </span>,\r\n        <span key='2'>\r\n            <ButtonUI\r\n                ClassName = 'red lighten-3'\r\n                clicked = {() => props.removeProduct(props.productName)}\r\n                textOrIcon = 'remove'\r\n            ></ButtonUI>\r\n        </span>\r\n]:null\r\n    return (\r\n            <Col\r\n                m={12}\r\n                l={6}\r\n            >\r\n                <Card\r\n                className=\"Card\"\r\n                actions={actionButtons}\r\n                closeIcon={<Icon>close</Icon>}\r\n                revealIcon={<Icon>more_vert</Icon>}\r\n                header={<CardTitle image={props.productImages} />}\r\n                horizontal\r\n                >\r\n                <h3>{props.productName}</h3>\r\n                <h3>{props.order}</h3>\r\n                <p>Quantity: {props.productQuantity}</p>\r\n                <p>Price: {util.formatCurrency(props.productPrices)}</p>\r\n                <p>Sizes: {sizes}</p>\r\n                </Card>\r\n            </Col>\r\n            \r\n    )\r\n}\r\nexport default product;","import React from 'react';\r\nimport Product from './Product/Product';\r\nimport { Row } from 'react-materialize'\r\n\r\n\r\nconst products = (props) => {\r\n    let products = Object.keys(props.products).map(productKey => {\r\n        if (productKey!=='price'){\r\n            return (\r\n                props.order?props.products[productKey]>0?\r\n                <Product \r\n                    order={props.order}\r\n                    key={productKey} \r\n                    productName={productKey} \r\n                    productQuantity={props.products[productKey]} \r\n                    productImages={props.productImages[productKey]}\r\n                    productPrices={props.productPrices[productKey]}\r\n                    productSizes={props.productSizes[productKey]}\r\n                    />\r\n                :null:\r\n                <Product \r\n                    key={productKey} \r\n                    productName={productKey} \r\n                    productQuantity={props.products[productKey]} \r\n                    productImages={props.productImages[productKey]}\r\n                    productPrices={props.productPrices[productKey]}\r\n                    productSizes={props.productSizes[productKey]}\r\n                    removeProduct={props.removeProduct}\r\n                    addProduct={props.addProduct}/>\r\n                )\r\n            }\r\n        }\r\n    )\r\n    \r\n        \r\n    return (\r\n        <Row>\r\n           {products}\r\n        </Row>\r\n    )\r\n}\r\nexport default products;","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-materialize';\r\n\r\nclass ModalComponent extends Component {\r\n    shouldComponentUpdate (nextProps, nextState) {\r\n        //console.log(this.props.orderable, nextProps.orderable);\r\n        //console.log(this.props.children, nextProps.children)\r\n        return (this.props.orderable !== nextProps.orderable || this.props.children !== nextProps.children)\r\n    }\r\n    componentDidUpdate (){\r\n        console.log('updated')\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n        <Modal\r\n            actions={[\r\n                <span key='1'><Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button></span>,\r\n                <span key='2'><Button flat modal=\"close\" node=\"button\" waves=\"green\" onClick={this.props.orderHandler}>Order</Button></span>\r\n            ]}\r\n            bottomSheet={false}\r\n            fixedFooter={false}\r\n            header=\"Order summary\"\r\n            id=\"modal-0\"\r\n            options={{\r\n                dismissible: true,\r\n                endingTop: '10%',\r\n                inDuration: 250,\r\n                onCloseEnd: null,\r\n                onCloseStart: null,\r\n                onOpenEnd: null,\r\n                onOpenStart: null,\r\n                opacity: 0.5,\r\n                outDuration: 250,\r\n                preventScrolling: true,\r\n                startingTop: '4%'\r\n            }}\r\n            trigger={<Button node=\"button\" disabled={!this.props.orderable} onClick={this.props.updateModalComponentHandler}>Order summary</Button>}\r\n            >\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalComponent;","const aux = (props) => props.children \r\nexport default aux;","import React, {Component} from 'react';\r\nimport Aux from '../Auxilary/Auxilary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        constructor (props) {\r\n            super(props)\r\n            this.state = {\r\n                error: null\r\n            }\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({\r\n                    error: null\r\n                })\r\n                return req\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({\r\n                    error: error.message\r\n                })\r\n            })\r\n        }\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n        \r\n      \r\n        hideModal = () => {\r\n            this.setState({\r\n                error: null\r\n            })\r\n        }\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                   <p>{this.state.error}</p>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>    \r\n            )\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport util from '../../hoc/Currency/Currency'\r\n\r\nclass orderSummary extends Component {\r\n    render(){\r\n        const productsList = this.props.products?Object.keys(this.props.products).map(productKey => {\r\n            return <li key={productKey}><span style={{textTransform: 'capitalize'}}>{productKey}</span>: {this.props.products[productKey]}</li>\r\n        }): \"\"\r\n        return(\r\n            <Aux>\r\n            <ul>\r\n                {productsList}\r\n            </ul>\r\n            <p>Total price: {util.formatCurrency(this.props.totalPrice)}</p>\r\n        </Aux>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default orderSummary;","import React from 'react';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport { Select, Row, Col } from 'react-materialize';\r\nimport './Filter.css'\r\n\r\nconst filter = (props) => (\r\n    <Aux>\r\n        <Row>\r\n            <Col s={6}>\r\n                <Select\r\n                label='Filter by size'\r\n                id=\"Select-9\"\r\n                multiple={false}\r\n                onChange={props.filterSize}\r\n                options={{\r\n                    classes: '',\r\n                    dropdownOptions: {\r\n                    alignment: 'left',\r\n                    autoTrigger: true,\r\n                    closeOnClick: true,\r\n                    constrainWidth: true,\r\n                    coverTrigger: true,\r\n                    hover: false,\r\n                    inDuration: 150,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    outDuration: 250\r\n                    }\r\n                }}\r\n                value=\"\"\r\n                >\r\n                <option disabled value=\"\" > {props.size} </option>\r\n                <option value=\"s\"> S </option>\r\n                <option value=\"m\"> M </option>\r\n                <option value=\"x\"> X </option>\r\n                <option value=\"xl\"> XL </option>\r\n                <option value=\"xxl\"> XXL </option>\r\n            </Select>\r\n            </Col>\r\n            <Col s={6}>\r\n            </Col>\r\n        </Row>\r\n        \r\n    </Aux>\r\n)\r\n    \r\nexport default filter;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n//images\r\nimport shert from '../../assets/images/products/shert.jpg';\r\nimport pants from '../../assets/images/products/pants.jpg';\r\nimport skirt from '../../assets/images/products/skirt.jpg';\r\n//components\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport Products from './Products//Products';\r\nimport Modal from '../UI/Modal/Modal';\r\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\r\nimport OrderSummary from './OrderSummary/OrderSummary';\r\nimport Filter from '../UI/Filter/Filter';\r\n\r\nconst PRODUCTS_IMAGES = {\r\n    shert: shert,\r\n    pants: pants,\r\n    skirt: skirt,\r\n}\r\nconst PRODUCTS_PRICES = {\r\n    shert: 10,\r\n    pants: 4.3,\r\n    skirt: 5.4,\r\n}\r\nconst PRODUCTS_SIZES = {\r\n    shert: [\"X\", \"L\", \"XL\", \"XXL\"],\r\n    pants: [\"X\", \"M\", \"XL\"],\r\n    skirt: [\"S\", \"X\", \"XXL\"],\r\n}\r\n\r\nclass Shop extends Component {\r\n    state = {\r\n        products: null,\r\n        filterProductsList: null,\r\n        totalPrice: 0,\r\n        orderable: false,\r\n        errorMessage: \"\",\r\n        size: '',\r\n        order:true\r\n    }\r\n    removeProduct = (productName) => {\r\n        //count\r\n        const oldProductCount = this.state.products[productName];\r\n        if (oldProductCount===0){\r\n            return;\r\n        }\r\n        const newProductCount =  oldProductCount - 1;\r\n        const products = {\r\n            ...this.state.products\r\n        }\r\n        products[productName] = newProductCount;\r\n        //totalPrice\r\n        const oldTotalPrice = this.state.totalPrice;\r\n        const newTotalPrice = oldTotalPrice - PRODUCTS_PRICES[productName]\r\n \r\n        this.setState({\r\n            products: products,\r\n            filterProductsList: products,\r\n            totalPrice: newTotalPrice\r\n        }, function(){\r\n            this.listProducts()\r\n        })\r\n        this.updatePurchasable(products);\r\n    }\r\n    addProduct = (productName) => {\r\n        //count\r\n        const oldProductCount = this.state.products[productName];\r\n        const newProductCount =  oldProductCount + 1\r\n        const products = {\r\n            ...this.state.products\r\n        }\r\n        products[productName] = newProductCount\r\n        //totalPrice\r\n        const oldTotalPrice = this.state.totalPrice;\r\n        const newTotalPrice = oldTotalPrice + PRODUCTS_PRICES[productName]\r\n\r\n        this.setState({\r\n            products: products,\r\n            filterProductsList: products,\r\n            totalPrice: newTotalPrice\r\n        }, function(){\r\n            this.listProducts()\r\n        })\r\n        this.updatePurchasable(products);\r\n        \r\n    }\r\n    updatePurchasable = (products) => {\r\n        const sum = Object.keys(products)\r\n        .map(productKey =>{\r\n            return products[productKey]\r\n        })\r\n        .reduce((first, next) => {\r\n            return first + next\r\n        },0)\r\n        this.setState({\r\n            orderable: sum>0\r\n        })\r\n    }\r\n    componentDidMount () {\r\n        axios.get('https://e-commerce-5e72e.firebaseio.com/products.json')\r\n        .then(resp =>{\r\n            this.setState({\r\n                products: resp.data,\r\n                filterProductsList: resp.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                errorMessage: \"Network error get\"\r\n            })\r\n        })\r\n    }\r\n    orderHandler = () => {\r\n        const queryParams = [];\r\n        for (let i in this.state.products){\r\n            queryParams.push(i + '=' + this.state.products[i])\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice)\r\n        const queryString = queryParams.join('&')\r\n        //this.props.history.push('/checkout')\r\n        this.props.history.push({\r\n            pathname:'/checkout',\r\n            search: '?' + queryString\r\n        })\r\n       }\r\n    \r\n    filterSize = (e) => {\r\n        this.setState({\r\n            size: e.target.value\r\n        }, function () {\r\n            this.listProducts()\r\n        })\r\n    }\r\n    listProducts = () => {\r\n        if(this.state.size!==''){\r\n            const selected = this.state.size;\r\n            var filterProductsList = {...this.state.products};\r\n            Object.keys(PRODUCTS_SIZES).forEach(element => {\r\n                if(PRODUCTS_SIZES[element].indexOf(selected.toUpperCase())<0){\r\n                delete filterProductsList[element]\r\n                }\r\n            });\r\n            this.setState({\r\n                filterProductsList: filterProductsList\r\n            })\r\n        }\r\n    }\r\n    render () {\r\n        const productsComponent = this.state.products?  <Products \r\n        products={this.state.filterProductsList} \r\n        filterProductsList={this.state.filterProductsList}\r\n        productImages={PRODUCTS_IMAGES}\r\n        productPrices={PRODUCTS_PRICES}\r\n        productSizes={PRODUCTS_SIZES}\r\n        removeProduct={this.removeProduct}\r\n        addProduct={this.addProduct}/>:<Spinner/>\r\n        \r\n        let ordeSummary = null;\r\n        let filterProducts = null;\r\n        if (this.state.products){\r\n            ordeSummary = \r\n            <OrderSummary \r\n                products={this.state.products}\r\n                totalPrice={this.state.totalPrice}\r\n            />\r\n            filterProducts =\r\n            <Filter\r\n                size={this.state.size}\r\n                filterSize={this.filterSize}\r\n            />\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Our shop</h1>\r\n                {filterProducts}\r\n                {productsComponent}\r\n                <p>{this.state.errorMessage}</p>\r\n                <Modal \r\n                    products={this.state.products}\r\n                    totalPrice={this.state.totalPrice}\r\n                    orderable={this.state.orderable}\r\n                    orderHandler={this.orderHandler}\r\n                >\r\n                    {ordeSummary}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Shop,axios);","import React from 'react';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport Products from '../Products/Products';\r\nimport ButtonUI from '../../UI/Button/Button';\r\n\r\nconst CheckoutSummary = (props) => {\r\n        return(\r\n            <Aux>\r\n                <Products \r\n                    order={props.order}\r\n                    products={props.filterProductsList} \r\n                    filterProductsList={props.filterProductsList}\r\n                    productImages={props.productImages}\r\n                    productPrices={props.productPrices}\r\n                    productSizes={props.productSizes}/>\r\n                    <ButtonUI ClassName = 'red lighten-3' clicked={props.onCheckoutCancle} text='Cancle' textOrIcon=''></ButtonUI>\r\n                    <ButtonUI ClassName = 'green lighten-3' clicked={props.onCheckoutContinue} text = 'Continue' textOrIcon=''/>\r\n            </Aux>\r\n        )\r\n}\r\nexport default CheckoutSummary;","import React from 'react';\r\nimport './Input.scss'\r\nconst input = (props) =>{\r\n    let inputElement = null;\r\n    const inputClasses = []\r\n    if (props.invalid && props.shouldValidate && props.tuched) {\r\n        inputClasses.push('Invalid')\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ('input'):\r\n            inputElement = <input className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.change}/>\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.change}/>\r\n            break;\r\n        case ('select'):   \r\n            inputElement = \r\n            <select value={props.value} onChange={props.change}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option key={option.value} value={option.value} >{option.deliveryValue}</option>\r\n                ))}\r\n            </select>\r\n            break;\r\n        default:\r\n            inputElement = <input {...props.elementConfig} value={props.value} onChange={props.change}/>\r\n    }\r\n    return (\r\n        <div>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\nexport default input;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ButtonUI from '../../../UI/Button/Button';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport { Row, Col } from 'react-materialize';\r\nimport './ContactData.css';\r\nimport InputComponent from '../../../UI/Forms/Input/Input';\r\nimport $ from 'jquery'\r\n\r\n\r\nclass CheckoutData extends Component{\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder:'Your name',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                tuched: false\r\n            },\r\n                \r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder:'Your street',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                tuched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder:'Your zipCode',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                },\r\n                valid: false,\r\n                tuched: false\r\n            },\r\n                country: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder:'Your country',\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    tuched: false\r\n                },  \r\n                email: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'email',\r\n                        placeholder:'Your email',\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    tuched: false\r\n                },  \r\n                deliveryMethod: {\r\n                    elementType: 'select',\r\n                    elementConfig: {\r\n                        options: [\r\n                            {value:'fastest', deliveryValue: 'Fastest'},\r\n                            {value:'cheapest', deliveryValue: 'Cheapest'}\r\n                        ]\r\n                    },\r\n                    validation: {},\r\n                    value: 'fastest',\r\n                    valid: true\r\n                },  \r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    }\r\n    checkValidity (value,rules){\r\n        console.log(value, rules)\r\n        let isValid = true\r\n        if (rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if (rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if (rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        return isValid\r\n    }\r\n    orderHandler = (e) => {\r\n        console.log('sfds')\r\n        e.preventDefault()\r\n        this.setState({ loading: true })\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\r\n        }\r\n        const products = {\r\n            products: this.props.products,\r\n            price: this.props.totalPrice,\r\n            orderData: formData,\r\n                \r\n                deliveryMethod: 'fast'\r\n        }\r\n        axios.post('https://e-commerce-5e72e.firebaseio.com/order.json', products)\r\n        .then(responce => {\r\n            this.setState({ loading: false })\r\n            this.props.history.push('/')\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                loading: false,\r\n                errorMessage: \"Network error post\",\r\n            })\r\n        })\r\n    }\r\n    inputChangedHandler = (event, inputIdentefier) => {\r\n        const updatedOrderForm = {...this.state.orderForm};\r\n        const updatedFormElement = {...updatedOrderForm[inputIdentefier]};\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity (updatedFormElement.value,updatedFormElement.validation)\r\n        \r\n        updatedFormElement.tuched = true;\r\n        updatedOrderForm[inputIdentefier] = updatedFormElement;\r\n        console.log(updatedOrderForm)\r\n        let formIsValid = true;\r\n        for (let inputIndentifiers in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIndentifiers].valid && formIsValid;\r\n            console.log(formIsValid)\r\n        }\r\n        console.log(formIsValid)\r\n        this.setState({\r\n            orderForm: updatedOrderForm,\r\n            formIsValid: formIsValid\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        $(document).ready(function() {\r\n            window.$('select').formSelect();\r\n          });\r\n    }\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id:key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler} className='text-placeholder'>\r\n               \r\n               {formElementArray.map(formElement => (\r\n                    <InputComponent \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType} \r\n                        elementConfig={formElement.config.elementConfig} \r\n                        value={formElement.config.value}\r\n                        change={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        tuched={formElement.config.tuched} />\r\n               ))}\r\n                <ButtonUI  \r\n                        ClassName = 'green lighten-2'\r\n                        text = 'Order'\r\n                        textOrIcon = ''\r\n                        disabled={!this.state.formIsValid}\r\n                    />\r\n            </form>\r\n            );\r\n        if (this.state.loading) {\r\n               form = <Spinner/>\r\n        }\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <Col s={3}/>\r\n                    <Col s={6}>\r\n                    <h4 className='center '>Enter your contact data</h4>\r\n                    {form}\r\n                    </Col>\r\n                    <Col s={3}/>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CheckoutData;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport { Route } from 'react-router-dom'\r\n\r\n//components\r\nimport CheckoutSummary from './CheckoutSummary';\r\nimport CheckoutData from '../Checkout/ContactData/ContactData'\r\n\r\n//images\r\nimport shert from '../../../assets/images/products/shert.jpg';\r\nimport pants from '../../../assets/images/products/pants.jpg';\r\nimport skirt from '../../../assets/images/products/skirt.jpg';\r\n\r\nconst PRODUCTS_IMAGES = {\r\n    shert: shert,\r\n    pants: pants,\r\n    skirt: skirt,\r\n}\r\nconst PRODUCTS_PRICES = {\r\n    shert: 10,\r\n    pants: 4.3,\r\n    skirt: 5.4,\r\n}\r\nconst PRODUCTS_SIZES = {\r\n    shert: [\"X\", \"L\", \"XL\", \"XXL\"],\r\n    pants: [\"X\", \"M\", \"XL\"],\r\n    skirt: [\"S\", \"X\", \"XXL\"],\r\n}\r\n\r\nclass Checkout extends Component{\r\n    \r\n    state = {\r\n        products: {\r\n            pants:0,\r\n            shert:1,\r\n            skirt:4\r\n        },\r\n        totalPrice: 0,\r\n        orderable: false,\r\n        errorMessage: \"\",\r\n        size: '',\r\n        order:true\r\n    }\r\n    componentDidMount(){\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        console.log(query)\r\n        const products = {};\r\n        var totalPrice = 0;\r\n        for (let param of query.entries()){//['pants','1']\r\n            if(param[0]==='price'){\r\n                totalPrice = param[1]\r\n            }else{\r\n                products[param[0]] = +param[1]\r\n            } \r\n        }\r\n        this.setState({\r\n            products: products,\r\n            totalPrice: totalPrice\r\n        })\r\n    }\r\n    onCheckoutCancle = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    onCheckoutContinue = () => {\r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <CheckoutSummary\r\n                    order={this.state.order}\r\n                    filterProductsList={this.state.products}\r\n                    productImages={PRODUCTS_IMAGES}\r\n                    productPrices={PRODUCTS_PRICES}\r\n                    productSizes={PRODUCTS_SIZES}\r\n                    onCheckoutCancle={this.onCheckoutCancle}\r\n                    onCheckoutContinue={this.onCheckoutContinue}\r\n                    />\r\n                    <Route \r\n                        path={this.props.match.path + '/contact-data'} \r\n                        render={(props) => (<CheckoutData products={this.state.products} totalPrice={this.state.totalPrice} {...props}/>)}\r\n                        />\r\n            </Aux>\r\n        )\r\n    }\r\n        \r\n}\r\nexport default Checkout;","import React from 'react';\r\nimport { CollapsibleItem } from 'react-materialize';\r\nimport util from '../../../hoc/Currency/Currency'\r\n\r\nconst order = (props) => {\r\n    /*let products = props.products? Object.keys(props.products).map( productsKey => \r\n        <li key={productsKey}>{productsKey.charAt(0).toUpperCase() + productsKey.slice(1)}: {props.products[productsKey]}</li>\r\n    ):null*/\r\n    let productsArray = [];\r\n    for (let productName in props.products){\r\n        productsArray.push({\r\n            name: productName,\r\n            amounth: props.products[productName]\r\n        })\r\n    }\r\n    const products = productsArray.map(product => \r\n        <li key={product.name}><span style={{textTransform: 'capitalize'}}>{product.name}</span>: {product.amounth}</li>)\r\n    return (\r\n        <CollapsibleItem\r\n            expanded={false}\r\n            header={props.name}\r\n            node=\"div\"\r\n            onSelect={()=>{}}\r\n        >\r\n            <ul>\r\n                {products}\r\n                <li><b>Total price: {util.formatCurrency(4.3)}</b></li>\r\n                <li></li>\r\n            </ul>\r\n        </CollapsibleItem>\r\n    )\r\n}\r\nexport default order","import React, { Component } from 'react';\r\nimport { Collapsible } from 'react-materialize';\r\nimport axios from 'axios';\r\n\r\n//components\r\nimport Order from './Order/Order';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n\r\nclass Orders extends Component {\r\n    state={\r\n        orders: [],\r\n        loading: true\r\n    }\r\n    componentDidMount () {\r\n        axios.get('https://e-commerce-5e72e.firebaseio.com/order.json')\r\n            .then ( responce => {\r\n                const orders = []\r\n                for (let key in responce.data){\r\n                    console.log(responce.data[key],key,responce.data)\r\n                    orders.push ({\r\n                        ...responce.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                console.log(orders)\r\n                this.setState ({\r\n                    orders: orders,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch( error => {\r\n                this.setState ({\r\n                    loading: false\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        let orders = this.state.orders?\r\n        <Collapsible accordion popout >\r\n        {this.state.orders.map(order => {\r\n            return (\r\n                <Order \r\n                    key={order.id}\r\n                    name={order.customer.name} \r\n                    deliveryMethod={order.deliveryMethod}\r\n                    products={order.products}\r\n                    \r\n                    />\r\n            )\r\n        })}\r\n        </Collapsible>: null\r\n           \r\n        if(this.state.loading){\r\n            orders = <Spinner/>\r\n        }\r\n        return (\r\n            <Aux>\r\n                <h3>Orders</h3>\r\n                {orders}\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders,axios);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n//components\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Shop from '../Shop/Shop';\r\nimport Checkout from '../Shop/Checkout/Checkout';\r\nimport Orders from '../Shop/Orders/Orders'\r\n\r\nconst layout = () => {\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n      <Switch>\r\n        <Route exact path={'/'} component={Shop}/>\r\n        <Route path={'/checkout'} component={Checkout}/>\r\n        <Route path={'/orders'} component={Orders}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default layout;","import React from 'react';\r\nimport './App.scss';\r\nimport 'materialize-css'; // It installs the JS asset only\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport Layout from './components/Layout/Layout';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"/shop\">\r\n      <Layout/>\r\n    </BrowserRouter>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/shert.eda47ffe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pants.99ddaf19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skirt.64895794.jpg\";"],"sourceRoot":""}