{"version":3,"sources":["components/Shop/Orders/Order/Order.js","components/Shop/Orders/Orders.js"],"names":["order","props","productsArray","productName","products","push","name","amounth","map","product","key","style","textTransform","charAt","toUpperCase","slice","match","join","expanded","header","width","node","onSelect","util","formatCurrency","onClick","deleteOrder","flat","className","waves","Orders","this","fetchOrders","token","userId","orders","accordion","popout","Order","id","orderData","deliveryMethod","noOrdersMessage","loading","Spinner","length","Component","connect","state","orderReducer","loadingOrders","authReducer","dispatch","actionCreators","orderId","withErrorHandler","axios"],"mappings":"iNAoCeA,EA/BD,SAACC,GACX,IAAIC,EAAgB,GACpB,IAAK,IAAIC,KAAeF,EAAMG,SAC1BF,EAAcG,KAAK,CACfC,KAAMH,EACNI,QAASN,EAAMG,SAASD,KAGhC,IAAMC,EAAWF,EAAcM,KAAI,SAAAC,GAC/B,OAA0B,IAAlBA,EAAQF,QAChB,wBAAIG,IAAKD,EAAQH,MAAM,0BAAMK,MAAO,CAACC,cAAe,gBAC9CH,EAAQH,KAAKO,OAAO,GAAGC,cAAcL,EAAQH,KAAKS,MAAM,IAAIC,MAAM,gBAAgBC,KAAK,MAD7F,KAEcR,EAAQF,SACjB,QAGT,OACI,kBAAC,kBAAD,CACIW,UAAU,EACVC,OAAQ,yBAAMR,MAAO,CAACS,MAAM,SAAS,8BAAOnB,EAAMK,OAClDe,KAAK,MACLC,SAAU,cAEV,4BACKlB,EACD,6BACA,4BAAI,2CAAiBmB,IAAKC,eAAe,MAAS,kBAAC,SAAD,CAAQC,QAASxB,EAAMyB,YAAaC,MAAI,EAACN,KAAK,SAASO,UAAU,gCAAgCC,MAAM,SAAvG,c,wCClB5DC,E,4LAGEC,KAAK9B,MAAM+B,YAAYD,KAAK9B,MAAMgC,MAAOF,KAAK9B,MAAMiC,U,+BAE9C,IAAD,OAEDC,EAASJ,KAAK9B,MAAMkC,OACxB,kBAAC,cAAD,CAAaC,WAAS,EAACC,QAAM,GAC5BN,KAAK9B,MAAMkC,OAAO3B,KAAI,SAAAR,GACnB,OACI,kBAACsC,EAAD,CACI5B,IAAKV,EAAMuC,GACXjC,KAAMN,EAAMwC,UAAUlC,KACtBmC,eAAgBzC,EAAMwC,UAAUC,eAChCrC,SAAUJ,EAAMI,SAChBsB,YAAa,kBAAM,EAAKzB,MAAMyB,YAAY1B,EAAMuC,GAAI,EAAKtC,MAAMgC,MAAO,EAAKhC,MAAMiC,eAI7E,KACAQ,EAAkB,KASlC,OAPGX,KAAK9B,MAAM0C,QACVR,EAAS,kBAACS,EAAA,EAAD,MAEiB,IAA3Bb,KAAK9B,MAAMkC,OAAOU,SACjBH,EAAgB,sBAIhB,kBAAC,IAAD,KACI,sCACCA,EACAP,O,GAlCIW,aAqDNC,uBAdS,SAAAC,GACpB,MAAO,CACHb,OAAQa,EAAMC,aAAad,OAC3BQ,QAASK,EAAMC,aAAaC,cAC5BjB,MAAOe,EAAMG,YAAYlB,MACzBC,OAAQc,EAAMG,YAAYjB,WAGP,SAAAkB,GACvB,MAAO,CACHpB,YAAa,SAACC,EAAMC,GAAP,OAAkBkB,EAASC,IAA2BpB,EAAMC,KACzER,YAAa,SAAC4B,EAASrB,EAAOC,GAAjB,OAA4BkB,EAASC,IAA2BC,EAASrB,EAAOC,QAGtFa,CAA4CQ,YAAiBzB,EAAO0B","file":"static/js/6.4782852b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CollapsibleItem } from 'react-materialize';\r\nimport util from '../../../hoc/Currency/Currency';\r\nimport { Button } from 'react-materialize';\r\n\r\nconst order = (props) => {\r\n    let productsArray = [];\r\n    for (let productName in props.products){\r\n        productsArray.push({\r\n            name: productName,\r\n            amounth: props.products[productName]\r\n        })\r\n    }\r\n    const products = productsArray.map(product => {\r\n        return (product.amounth!==0?\r\n        <li key={product.name}><span style={{textTransform: 'capitalize'}}>\r\n            {(product.name.charAt(0).toUpperCase()+product.name.slice(1)).match(/[A-Z][a-z]+/g).join(' ')}\r\n            </span>: {product.amounth}</li>\r\n            :null\r\n        )}\r\n        )\r\n    return (\r\n        <CollapsibleItem\r\n            expanded={false}\r\n            header={<div  style={{width:'100%'}}><span>{props.name}</span></div>}\r\n            node=\"div\"\r\n            onSelect={()=>{}}\r\n        >\r\n            <ul>\r\n                {products}\r\n                <hr/>\r\n                <li><b>Total price: {util.formatCurrency(4.3)}</b><Button onClick={props.deleteOrder} flat node=\"button\" className=\" right red-text text-darken-2\" waves=\"light\">remove</Button></li>\r\n            </ul>\r\n        </CollapsibleItem>\r\n    )\r\n}\r\nexport default order","import React, { Component } from 'react';\r\nimport { Collapsible } from 'react-materialize';\r\nimport axios from 'axios';\r\n\r\n//components\r\nimport Order from './Order/Order';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../../store/actions/allActions';\r\nclass Orders extends Component {\r\n   \r\n    componentDidMount () {\r\n        this.props.fetchOrders(this.props.token, this.props.userId)\r\n    }\r\n    render() {\r\n        \r\n        let orders = this.props.orders?\r\n        <Collapsible accordion popout >\r\n        {this.props.orders.map(order => {\r\n            return (\r\n                <Order \r\n                    key={order.id}\r\n                    name={order.orderData.name} \r\n                    deliveryMethod={order.orderData.deliveryMethod}\r\n                    products={order.products}\r\n                    deleteOrder={() => this.props.deleteOrder(order.id, this.props.token, this.props.userId)}\r\n                    />\r\n            )\r\n        })}\r\n        </Collapsible>: null\r\n                    let noOrdersMessage = null;\r\n\r\n        if(this.props.loading){\r\n            orders = <Spinner/>\r\n        }else{\r\n        if(this.props.orders.length===0){\r\n            noOrdersMessage='You have no orders'\r\n        }\r\n        }\r\n        return (\r\n            <Aux>\r\n                <h3>Orders</h3>\r\n                {noOrdersMessage}\r\n                {orders}\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orderReducer.orders,\r\n        loading: state.orderReducer.loadingOrders,\r\n        token: state.authReducer.token,\r\n        userId: state.authReducer.userId\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchOrders: (token,userId) => dispatch(actionCreators.fetchOrders(token,userId)),\r\n        deleteOrder: (orderId, token, userId) => dispatch(actionCreators.deleteOrder(orderId, token, userId))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));"],"sourceRoot":""}